apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'
apply plugin: 'walle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.tanxin.base"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a'
//            'armeabi', 'x86',, 'arm64-v8a', 'x86_64'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        debug {
            storeFile file('C:/Users/Administrator/Desktop/jks/yihan.jks')
            storePassword "tx19961112"
            keyAlias "tanxin"
            keyPassword "tx19961112"
        }
        release {
            try {
                storeFile file('C:/Users/Administrator/Desktop/jks/yihan.jks')
                storePassword "tx19961112"
                keyAlias "tanxin"
                keyPassword "tx19961112"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }

    buildTypes {
        debug {
            // 进行压缩优化
            zipAlignEnabled false
            // 进行混淆
            minifyEnabled false
            // 进行资源优化，移除无用的resource文件
            shrinkResources false
            // 使用的签名信息
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            // 进行混淆
            minifyEnabled false
            // 进行资源优化，移除无用的resource文件
            shrinkResources false
            // 进行压缩优化
            zipAlignEnabled true
            // 使用的签名信息
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
    dexOptions {
        jumboMode = true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportVersion"
    implementation "com.android.support:support-v4:$rootProject.supportVersion"
    implementation "com.android.support:design:$rootProject.supportVersion"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okio:okio:1.14.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    implementation 'com.meituan.android.walle:library:1.1.6'
    implementation 'com.alibaba:arouter-api:1.4.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.1'
    implementation 'com.qmuiteam:qmui:1.1.6'
    implementation 'com.blankj:utilcode:1.19.3'
    implementation 'me.yokeyword:fragmentation:1.3.6'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.41'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "com.xiaomai.environmentswitcher:environmentswitcher:$rootProject.environmentVersion"
    debugAnnotationProcessor "com.xiaomai.environmentswitcher:environmentswitcher-compiler:$rootProject.environmentVersion"
    releaseAnnotationProcessor "com.xiaomai.environmentswitcher:environmentswitcher-compiler-release:$rootProject.environmentVersion"
}


walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("C:/Users/Administrator/Desktop/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${channel}-${buildType}-v${versionName}-${versionCode}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}